@model Cuponera.Entities.store

@{
    ViewBag.Title = "Store";
}

<script type="text/javascript" src="http://maps.googleapis.com/maps/api/js"></script>
@Scripts.Render("~/bundles/googlemaps")


<script type="text/javascript">
    function drawMarkerCallback(lat, lng) {
        $('#latitude').val(lat);
        $('#longitude').val(lng);
    }

    $(function () {
        map = maps.initialize({
            editable: true
        });
        geocoder = geocoder.initialize(map);

        $('#search').click(function () {
            geocoder.checkIfUserCanAskForCoordinates({
                done: function () {
                    var address = $('#address').val();
                    var selected_state_id = $('#states').val();
                    var city = $('#states').find('option[value=' + selected_state_id + ']').html();
                    var province = 'Buenos Aires';
                    var country = 'Argentina';
                    geocoder.getCoordinatesByAddress(address, city, province, country);
                }
            });
        });

        $('[type=submit]').click(function () {
            $('#validation_coordinates').removeClass('field-validation-error')
                       .addClass('field-validation-valid');
            $('#googleMap').removeClass('has-error');

            if ($('#latitude').val().length === 0 || $('#longitude').val().length === 0) {
                $('#validation_coordinates').removeClass('field-validation-valid')
                       .addClass('field-validation-error');

                $('#googleMap').addClass('has-error');
                return false;
            }
        });
    });
</script>

<h2>Agregar sucursal</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Sucursal</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, "Nombre", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContactNumber, "Teléfono de contacto", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContactNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContactNumber, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Address, "Dirección", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @id = "address", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.state.Name, "Localidad", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.IdState, new SelectList(
                  ViewBag.States,
                  "value",
                  "text",
                   0),
                   htmlAttributes: new { @id = "states" })
            </div>
        </div>

        <div class="form-group">
            <input type="button" id="search" value="Ubicar dirección" />
        </div>


        <div class="float-left map" id="googleMap"></div>

        <div class="advertisment float-right">
        </div>

        @Html.HiddenFor(model => model.Latitude, htmlAttributes: new { @id = "latitude" })
        @Html.HiddenFor(model => model.Longitude, htmlAttributes: new { @id = "longitude" })

        <div style="clear:both;"></div>
        <span class="text-danger field-validation-valid" id="validation_coordinates">
            <span id="location-error" class="">
                Debe ingresar las coordenadas.
            </span>
        </span>

        <span class="text-danger field-validation-valid" id="validation_coordinates"><span id="location-error" class="">Debe ingresar las coordenadas.</span></span>

        <div class="form-group">
            @Html.LabelFor(model => model.ZipCode, "Código postal", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StoreHours, "Horarios de trabajo", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.StoreHours, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StoreHours, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, "Email", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FacebookUrl, "Facebook URL", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FacebookUrl, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FacebookUrl, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WhatsApp, "Whats App", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.WhatsApp, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WhatsApp, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Crear" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Volver", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
