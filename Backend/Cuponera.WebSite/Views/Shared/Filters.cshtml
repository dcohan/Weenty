<fieldset class="filters col-sm-12">
    <legend>Filtros</legend>
</fieldset>

<script type="text/javascript">
    function updateCurrentState() {
        $('.filters input').each(function (key, input) {
            var $input = $(input);
            if ($input.prop('type') === 'button') { return false; }

            current_state[$input.prop('id')] = ['checkbox', 'radio'].indexOf($input.prop('type')) > -1 ? $input.is(':checked') : $input.val();
        });
    }

    function buildCurrentStateQS() {
        var qs = '';
        for (var key in current_state) {
            if (current_state[key].toString().length > 0) {
                qs += key + '=' + current_state[key] + '&';
           }
        }

        return qs.length > 0 ? qs.substr(0, qs.lastIndexOf('&')) : qs;
    }

    function redirect(filters) {
        document.location.href = globals.controller + '?' + buildCurrentStateQS();
    }

    function resizeFiltersForm() {
        var window_width = $(window).width();
        var brothers = $('.table');
        var __min_filters_size__ = 376;
        var others_size = 0;
        $(brothers).each(function(key, elem) {
            others_size += $(elem).width();
        });

        if (window_width - others_size - 30 < __min_filters_size__) {
            $('.filters').addClass('full-width');
        } else {
            $('.filters').removeClass('full-width');
        }
    }

    var _common_filters = [{
        controlType: 'checkbox',
        controlId: 'all',
        label: 'Ver todos',
        controlDefaultValue: @((Request.Params["all"] != null && Convert.ToBoolean(@Request.Params["all"])).ToString().ToLower())
    }];

    var _filters = [];
    if (globals.filters && globals.filters.include && globals.filters.include.length > 0) {
        var includes = globals.filters.include;
        $(_common_filters).each(function (key, filter) {
            if (includes.indexOf(filter.controlId) > -1) {
                _filters.push(filter);
            }
        });
    }

    if (globals.filters.custom) {
        _filters = _filters.concat(globals.filters.custom);
    }


    /* Render filters */
    $(_filters).each(function (key, elem) {
        $container = $('<div></div>').addClass('filter');
        if (elem.controlType === 'text') {
            // label: input
            if (elem.label) {
                $container.append(
                    $('<span></span>')
                        .html(elem.label + ':')
                        .addClass('filter-label-pre')
                );
            }
            $input = $('<input>').prop('type', elem.controlType)
                                .prop('id', elem.controlId);

            if (elem.controlDefaultValue) { $input.val(elem.controlDefaultValue); }
            $container.append($input);
        } else {
            // input label
            $input = $('<input>').prop('type', elem.controlType)
                                .prop('id', elem.controlId)
                                .prop('checked', elem.controlDefaultValue ? elem.controlDefaultValue : false);
            $container.append($input);
            if (elem.label) {
                $container.append(
                    $('<label></label>')
                        .addClass('filter-label-post')
                        .html(elem.label)
                        .prop('for', elem.controlId)
                );
            }
            $container.addClass('group-control-box');
        }

        $('.filters').append($container);
    });

    if (_filters.length > 0) {
        var $button = $('<input>')
                        .prop('type', 'button')
                        .prop('value', 'Aplicar filtros');
        $('.filters').append($button);
        $button.click(function () {
            updateCurrentState();
            redirect();
        })
    }


    /* Defines Current state object */
    if (!current_state) {
        var current_state = {};
    }
    var cp;
    var qs = location.search.split('?')[1];
    if (qs) {
        qs = qs.split('&');
        $(qs).each(function(key, param){
            cp = param.split('=');

            /* Only set params in filters */
            $(_filters).each(function(key, filter){
                if (filter.controlId == cp[0]) {
                    current_state[cp[0]] = cp[1];
                }
            });

        });
    }


    /* Bindings */
    $(function () {
        resizeFiltersForm();

        $(window).resize(resizeFiltersForm);
    });
</script>