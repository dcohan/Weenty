@model Cuponera.Entities.subscription

@{
    ViewBag.Title = "Editar " + Model.Name;
}

<script type="text/javascript">
    var images_to_remove = [];
    var images = [];

    $(function () {
        $('#fileUpload').change(function (e) {
            var files = e.target.files;
            if (!files.length) { return; }

            $('.files-name').empty();
            $(files).each(function (k, v) {
                $('.files-name').append(
                    $('<div></div>').html(v.name)
                );
            });
        });

        $('.image-container').click(function () {
            $('.image-container').removeClass('selected');
            $(this).addClass('selected');

            var id_image = $(this).data('id-image');
            $(images).each(function (k, v) {
                if (v.id_image == id_image) {
                    $('#ImagePath').attr('value', v.url);
                }
            });
        });

        $('.delete-icon').click(function () {
            var $container = $(this).closest('.image-container');
            var id_image = $container.data('id-image');
            images_to_remove.push(id_image);

            var selected_image_path = $('#ImagePath').val();
            $(images).each(function (k, v) {
                if (v.id_image == id_image && selected_image_path == v.url) {
                    $('#ImagePath').attr('value', '');
                }
            });

            $container.remove();
            $('#imagesToRemove').val(images_to_remove.join(','));
        });

    });
</script>

<h2>@Html.DisplayFor(model => model.Name)</h2>

@using (Html.BeginForm("Edit", "subscription", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Suscripción</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IdSubscription)


        <div class="form-group">
            @Html.LabelFor(model => model.Name, "Nombre", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Pricing, "Precio", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Pricing, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Pricing, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Duration, "Duración", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SortFactor, "Número orden", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SortFactor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SortFactor, "", new { @class = "text-danger" })
            </div>
        </div>
        

        <div class="form-group">
            <div class="col-md-10">
                <label class="control-label col-md-2" for="">Ícono</label>
                <div class="mini-images-container">
                    @if (!string.IsNullOrEmpty(Model.Icon))
                    {
                        <div class="mini-image-container" data-id-image="main">
                            <div class="mini-image-container-content">
                                <img src="@Html.DisplayFor(model => model.Icon)" class="icon" title="@Model.Name" alt="@Model.Name" />
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
        <br />

        <div class="form-group">
            <div class="col-md-10">
                <input type="file" id="fileUpload" name="fileUpload" multiple="multiple" />
            </div>

            Las imágenes seleccionadas son:
            <div class="files-name">

            </div>
        </div>








        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Aceptar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Volver", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
