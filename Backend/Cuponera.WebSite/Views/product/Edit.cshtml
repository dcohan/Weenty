@model Cuponera.Entities.product

@{
    ViewBag.Title = "Editar";
}

<h2>Editar</h2>

<style type="text/css">
    #selectedFiles img {
        max-width: 200px;
        max-height: 200px;
        float: left;
        margin-bottom: 10px;
    }

    input[type='file'] {
        color: transparent;
    }
</style>
@Scripts.Render("~/bundles/globalization")
@Scripts.Render("~/bundles/globalization_ar")

<script type="text/javascript">

    var nowTemp = new Date();
    var now = new Date(nowTemp.getFullYear(), nowTemp.getMonth(), nowTemp.getDate(), 0, 0, 0, 0);
    var files;
    var storedFiles = [];
    var upc = 0;



    $(function () {

        $(":file").attr('title', '  ');
        var $loading = $('#loadingDiv').hide();

        $("input[id^='fileToUpload']").change(function (e) {
            doReCreate(e);
        });

        selDiv = $("#selectedFiles");
    });


    function doReCreate(e) {
        upc = upc + 1;
        handleFileSelect(e);

        $("input[id^='fileToUpload']").hide();

        $('<input>').attr({
            type: 'file',
            multiple: 'multiple',
            id: 'fileToUpload' + upc,
            class: 'fUpload',
            name: 'fileUpload',
            style: 'float: left',
            title: '  ',
            onchange: "doReCreate(event)"

        }).appendTo('#uploaders');
    }


    function handleFileSelect(e) {

        //selDiv.innerHTML = ""; storedFiles = [];
        selDiv = document.querySelector("#selectedFiles");

        if (!e.target.files) return;

        //selDiv.innerHTML = "";
        files = e.target.files;

        for (var i = 0; i < files.length; i++) {
            //if (i == 0) { selDiv.innerHTML = ""; storedFiles = []; }
            var f = files[i];
            selDiv.innerHTML += "<div>" + f.name + "<a onclick='removeAtt(this)'> X </a></div>";
            storedFiles.push(f.name);
        }
        $('#@Html.IdFor(i => i.ImagePath)').val(storedFiles);
    }

    function removeAtt(t) {
        var serEle = $(t).parent().text().slice(0, -3);
        var index = storedFiles.indexOf(serEle);
        if (index !== -1) {
            storedFiles.splice(index, 1);
        }
        $(t).parent().remove();

        $('#@Html.IdFor(i => i.ImagePath)').val(storedFiles);

    }

    $(function () {
        

        $.validator.methods.date = function (value, element) {
                Globalize.culture("es-AR");
                // you can alternatively pass the culture to parseDate instead of
                // setting the culture above, like so:
                // parseDate(value, null, "en-AU")
                return this.optional(element) || Globalize.parseDate(value) !== null;
        }

        $(".date-picker").removeClass('input-validation-error');
        $(".date-picker").datepicker({
            dateFormat: "dd/mm/yy"
        });

        document.getElementsByClassName('hidden');
        $(".hidden").removeClass('input-validation-error');

    });
</script>

@using (Html.BeginForm("Edit", "product", FormMethod.Post, new { enctype = "multipart/form-data", id = "frmID" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Producto</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IdProduct)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, "Nombre", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, "Descripción", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Active, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, "Precio", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdCategory, "Categoria", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdCategory")
                @Html.ValidationMessageFor(model => model.IdCategory, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdStore, "Sucursal", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdStore", String.Empty)
                @Html.ValidationMessageFor(model => model.IdStore, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartDatetime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartDatetime, new { htmlAttributes = new { @class = "form-control, date-picker" } })
                @Html.ValidationMessageFor(model => model.StartDatetime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExpirationDatetime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExpirationDatetime, new { htmlAttributes = new { @class = "form-control, date-picker" } })
                @Html.ValidationMessage("Date")
                @Html.ValidationMessageFor(model => model.ExpirationDatetime, "", new { @class = "text-danger" })
            </div>
        </div>

      
        <div class="form-group">
            <div class="col-md-10">
                <div class="control-label col-md-2 item-description">
                    <div><b>Portada:</b></div>
                     <img src="@Html.DisplayFor(model => model.ImagePath)" style="width:80px; height:80px" alt="inactive" class="inactive" />
                </div>
                <div class="item-description">
                <div>
                        <b>Imagenes:</b>
                </div>
                    @foreach (var item in Model.images)
                    {
                        <img src="@Html.DisplayFor(model => item.ImagePath)" style="width:80px; height:80px" alt="inactive" class="inactive" />
                    }
                </div>
            </div>
        </div>

        <div class="hidden">
            @Html.EditorFor(model => model.ImagePath, new { htmlAttributes = new { @class = "form-control" } })
        </div>

        <div class="labelstyle">
            <label>Files</label>
        </div>

        <div id="uploaders">
            <input type="file" id="fileToUpload" name="fileUpload" multiple="multiple" style="float: left;" />
            <br />
            <span id="spnFile" style="float: left; color: #FF0000"></span>
            @Html.ValidationMessage("File")
            @Html.Hidden("hdnFileUpload")
        </div>
        <br />
        <br />
        <br />
        <div class="control-section" style="padding: 0px;">
            <div id="selectedFiles"></div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Volver", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
