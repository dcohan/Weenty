@model Cuponera.Entities.product

@{
    ViewBag.Title = "Crear";
}


<h2>Agregar producto</h2>

@Scripts.Render("~/bundles/globalization")
@Scripts.Render("~/bundles/globalization_ar")

<script type="text/javascript">
    $(function () {
        $('#fileUpload').change(function (e) {
            var files = e.target.files;
            if (!files.length) { return; }

            $('.files-name').empty();
            $(files).each(function (k, v) {
                $('.files-name').append(
                    $('<div></div>').html(v.name)
                );
            });
        });

        $.validator.methods.date = function (value, element) {
                Globalize.culture("es-AR");
                // you can alternatively pass the culture to parseDate instead of
                // setting the culture above, like so:
                // parseDate(value, null, "en-AU")
                return this.optional(element) || Globalize.parseDate(value) !== null;
        }

        $(".date-picker").removeClass('input-validation-error');
        $(".date-picker").datepicker({
            dateFormat: "dd/mm/yy"
        });

        document.getElementsByClassName('hidden');
        $(".hidden").removeClass('input-validation-error');

    });
</script>

@using (Html.BeginForm("Create", "product", FormMethod.Post, new { enctype = "multipart/form-data", id = "frmID" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Producto</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, "Nombre", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, "Descripción", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, "Precio ($)", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.IdStore, "Sucursal", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdStore", String.Empty)
                @Html.ValidationMessageFor(model => model.IdStore, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdCategory, "Categoria", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdCategory", String.Empty)
                @Html.ValidationMessageFor(model => model.IdCategory, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="StartDatetime">Fecha Inicio</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartDatetime, new { htmlAttributes = new { @class = "form-control, date-picker" } })
                @Html.ValidationMessageFor(model => model.StartDatetime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="ExpirationDatetime">Fecha Expiración</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExpirationDatetime, new { htmlAttributes = new { @class = "form-control, date-picker" } })
                @Html.ValidationMessage("Date")
                @Html.ValidationMessageFor(model => model.ExpirationDatetime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="fileUpload">Imágenes</label>
            <div class="col-md-10">
                <input type="file" id="fileUpload" name="fileUpload" multiple="multiple" />
            </div>

            Las imágenes seleccionadas son:
            <div class="files-name">

            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Crear" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Volver", "Index", "product")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
