Las operaciones de escritura son ASYNC, guarda!! podemos hacerlo sync si quieren, pero me parece que es mucho mejor asi

Url metadata por entidad
http://<<server>>/data/$metadata#<<entity>>/@Element

Url para manejo de entidades:
http://<<server>>/api/<<entity>>

Como hacer un GET de todos los objetos:´
http://localhost:13883/data/deviceos

Como hacer un GET de un objeto por ID:
http://localhost:13883/data/deviceos(1)

Como hacer un GET por alguna property, custom request, en estos casos vamos a necesitar armar el custom get

Como llamar a entidades relacionadas: es posible obtener los datos relacionados a una entity, por ejemplo podemos 
obtener todos los profiles del deviceos id=1 (ver el modelo de datos para verificar cuales asociaciones existen...
http://localhost:13883/data/deviceos(1)/profile

Definir el TOP: cuantos en el GET(todos iguales? diferentes según la entity?)

Eliminar un objeto (HTTP Code: 204)
http://localhost:13883/data/deviceos(1) (VERB: DELETE)

Agregar un objeto:
http://localhost:13883/data/deviceos (VERB: POST)
raw body: { code:"i" } ( es la entity transformada en json)

Como actualizar un objeto: (HTTP Code: 204)
http://localhost:13883/data/deviceos(5) (VERB: PUT, Header Content-Type = application/json)
raw body: { code:"i", idDeviceos:"5" } 
( son los datos de la entity que queremos actualizar, cuidado con el tipo de dato!, ojo se tienen que repetir los id, como parte de la url REST y como data en el json!)
